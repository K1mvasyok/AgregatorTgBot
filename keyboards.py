import datetime
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - –ú–µ–Ω—é
async def menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚úàÔ∏è –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ú–∞—Ä—à—Ä—É—Ç"), KeyboardButton(text="üë§ ")],
            [KeyboardButton(text="üë• "), KeyboardButton(text="üë• ")]], 
        resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∏–∂–µ")

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
async def return_to_menu():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–æ—Ä–æ–¥–æ–≤ - –≤—ã–ª–µ—Ç
async def city_origin():
    return InlineKeyboardMarkup(inline_keyboard=
        [[
        InlineKeyboardButton(text="–ò—Ä–∫—É—Ç—Å–∫", callback_data=f"city.origin_IKT"),
        InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞", callback_data=f"city.origin_MOV"),
        ],[
        InlineKeyboardButton(text="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data=f"city.origin_LED"),
        InlineKeyboardButton(text="–°–æ—á–∏", callback_data=f"city.origin_AER"),
        ],[               
        InlineKeyboardButton(text="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", callback_data=f"city.origin_SVX"),
        InlineKeyboardButton(text="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", callback_data=f"city.origin_OVB")
        ],[
        InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–æ—Ä–æ–¥–æ–≤ - –ø—Ä–∏–ª–µ—Ç
async def city_destination(city_origin):
    return InlineKeyboardMarkup(inline_keyboard=
        [[
        InlineKeyboardButton(text="–ò—Ä–∫—É—Ç—Å–∫", callback_data=f"city.destination_IKT.{city_origin}"),
        InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞", callback_data=f"city.destination_MOV.{city_origin}"),
        ],[
        InlineKeyboardButton(text="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data=f"city.destination_LED.{city_origin}"),
        InlineKeyboardButton(text="–°–æ—á–∏", callback_data=f"city.destination_AER.{city_origin}"),
        ],[               
        InlineKeyboardButton(text="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", callback_data=f"city.destination_SVX.{city_origin}"),
        InlineKeyboardButton(text="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", callback_data=f"city.destination_OVB.{city_origin}")
        ],[
        InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]])

# –ö–ª–∞–≤–∏–∞—É—Ç—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ–¥
async def time_year(city_destination_origin):
    buttons = [
        [InlineKeyboardButton(text="–î–∞, –≤ —ç—Ç–æ–º –≥–æ–¥—É", callback_data=f"time.year_0.{city_destination_origin}")],
        [InlineKeyboardButton(text="–ù–µ—Ç, –≤ —Å–ª–µ–¥—É—é—â–µ–º", callback_data=f"time.year_1.{city_destination_origin}")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ –≤—ã–ª–µ—Ç–∞
async def time_month(city_destination_origin):
    buttons = [
        [InlineKeyboardButton(text="–Ø–Ω–≤–∞—Ä—å", callback_data=f"time.month_01.{city_destination_origin}"), InlineKeyboardButton(text="–§–µ–≤—Ä–∞–ª—å", callback_data=f"time.month_02.{city_destination_origin}")],
        [InlineKeyboardButton(text="–ú–∞—Ä—Ç", callback_data=f"time.month_03.{city_destination_origin}"), InlineKeyboardButton(text="–ê–ø—Ä–µ–ª—å", callback_data=f"time.month_04.{city_destination_origin}")],
        [InlineKeyboardButton(text="–ú–∞–π", callback_data=f"time.month_05.{city_destination_origin}"), InlineKeyboardButton(text="–ò—é–Ω—å", callback_data=f"time.month_06.{city_destination_origin}")],
        [InlineKeyboardButton(text="–ò—é–ª—å", callback_data=f"time.month_07.{city_destination_origin}"), InlineKeyboardButton(text="–ê–≤–≥—É—Å—Ç", callback_data=f"time.month_08.{city_destination_origin}")],
        [InlineKeyboardButton(text="–°–µ–Ω—Ç—è–±—Ä—å", callback_data=f"time.month_09.{city_destination_origin}"), InlineKeyboardButton(text="–û–∫—Ç—è–±—Ä—å", callback_data=f"time.month_10.{city_destination_origin}")],
        [InlineKeyboardButton(text="–ù–æ—è–±—Ä—å", callback_data=f"time.month_11.{city_destination_origin}"), InlineKeyboardButton(text="–î–µ–∫–∞–±—Ä—å", callback_data=f"time.month_12.{city_destination_origin}")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –¥–Ω—è –º–µ—Å—è—Ü–∞
async def time_day(month_year_city_destination_origin, month, year_offset=0):
    now = datetime.datetime.now()
    year = now.year + year_offset  # –í—ã—á–∏—Å–ª—è–µ–º –≥–æ–¥ —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è
    next_month = month + 1 if month < 12 else 1  # –£—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    next_year = year + 1 if month == 12 else year 
    days_in_month = (datetime.date(next_year, next_month, 1) - datetime.date(year, month, 1)).days # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ
    buttons = []
    for day in range(1, days_in_month + 1):
        callback_data = f"time.day_{day}.{month_year_city_destination_origin}"
        buttons.append(InlineKeyboardButton(text=str(day), callback_data=callback_data))
    keyboard_rows = [buttons[i:i+7] for i in range(0, days_in_month, 7)]
    keyboard_rows.append([InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard_rows)

async def airlines_start(day_month_year_city_destination_origin):
    buttons = [
        [InlineKeyboardButton(text="üïí –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è", callback_data=f"sdgdf")],
        [InlineKeyboardButton(text="üîÅ –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç", callback_data=f"airlines.back_{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ –ø—Ä–∏–ª–µ—Ç–∞
async def back_month(day_month_year_city_destination_origin):
    buttons = [
        [InlineKeyboardButton(text="–Ø–Ω–≤–∞—Ä—å", callback_data=f"back.month_01.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–§–µ–≤—Ä–∞–ª—å", callback_data=f"back.month_02.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="–ú–∞—Ä—Ç", callback_data=f"back.month_03.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–ê–ø—Ä–µ–ª—å", callback_data=f"back.month_04.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="–ú–∞–π", callback_data=f"back.month_05.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–ò—é–Ω—å", callback_data=f"back.month_06.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="–ò—é–ª—å", callback_data=f"back.month_07.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–ê–≤–≥—É—Å—Ç", callback_data=f"back.month_08.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="–°–µ–Ω—Ç—è–±—Ä—å", callback_data=f"back.month_09.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–û–∫—Ç—è–±—Ä—å", callback_data=f"back.month_10.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="–ù–æ—è–±—Ä—å", callback_data=f"back.month_11.{day_month_year_city_destination_origin}"), InlineKeyboardButton(text="–î–µ–∫–∞–±—Ä—å", callback_data=f"back.month_12.{day_month_year_city_destination_origin}")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –¥–Ω—è –º–µ—Å—è—Ü–∞
async def back_day(backmonth_day_month_year_city_destination_origin, month, year_offset=0):
    now = datetime.datetime.now()
    year = now.year + year_offset  # –í—ã—á–∏—Å–ª—è–µ–º –≥–æ–¥ —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è
    next_month = month + 1 if month < 12 else 1  # –£—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    next_year = year + 1 if month == 12 else year 
    days_in_month = (datetime.date(next_year, next_month, 1) - datetime.date(year, month, 1)).days # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ
    buttons = []
    for day in range(1, days_in_month + 1):
        callback_data = f"back.day_{day}.{backmonth_day_month_year_city_destination_origin}"
        buttons.append(InlineKeyboardButton(text=str(day), callback_data=callback_data))
    keyboard_rows = [buttons[i:i+7] for i in range(0, days_in_month, 7)]
    keyboard_rows.append([InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard_rows)