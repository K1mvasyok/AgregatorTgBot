from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart

import keyboards as kb

router_u = Router()

# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@router_u.message(CommandStart())
async def Cmd_start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç üëãüèº,\n–Ø - —á–∞—Ç-–±–æ—Ç Travel Tracker\n\n'
                             f'–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?: \n\n'
                             f'‚Ä¢ –ú—ã –º–æ–∂–µ–º –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–∞–ª—å–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç –∏–∑ —Ç–æ—á–∫–∏ –ê –≤ —Ç–æ—á–∫—É –ë\n\n'  
                             f'‚Ä¢ –í—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–±—É—Å–Ω—ã—Ö, –∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã—Ö –∏ –∞—ç—Ä–æ-–º–∞—Ä—à—Ä—É—Ç–∞—Ö –≤ –†–æ—Å—Å–∏–∏')
    await message.answer(f'üîÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=await kb.menu())

# –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
@router_u.callback_query(F.data.startswith("return_to_menu"))
async def Return_to_menu(query: CallbackQuery):
    await query.message.answer('üîÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=await kb.menu())

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
@router_u.message(F.text == '‚úàÔ∏è –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ú–∞—Ä—à—Ä—É—Ç')
async def –°ity_origin_botton(message: Message):
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', reply_markup=await kb.city_origin())

@router_u.callback_query(F.data.startswith("city.origin_"))
async def City_destination_botton(query: CallbackQuery):
    city_origin = query.data.split("_")[1]
    await query.message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ ?–ø—Ä–∏–ª–µ—Ç–∞?:', reply_markup=await kb.city_destination(city_origin))